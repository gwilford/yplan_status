#!/opt/local/bin/perl -w;

use strict;

# MPV settle time
my $settle = 30;
my %pins = { 2, 3 };
my %child;

# Child routine
sub spawn_handler {
	my $pin = @_[0];
	my $pid = fork();
	die unless defined $pid;
	if ($pid == 0) {
		# In the child
		#system("gpio ...");
		exit(0);
	}
	$child{$pid} = $pin;
}

sub pin_state {
	my ($pin, $ret) = @_;
	sleep $settle;
}

# Initialise pin_handlers
foreach my $pin (keys %pins) {
	# init pin_status
	#gpio $pin input
	#gpio $pin pull_up
	#$pins{$pin} = chomp(`gpio $pin read`);
	spawn_handler($pin);
}

while (1) {
	my $pid = wait();
	pin_state($child{$pid}, $?);
	delete($child{$pid}) or die "Forgotten child died";
	# replace terminated handler
	spawn_handler($pin);
}
